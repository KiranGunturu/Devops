# terraform
docs - https://registry.terraform.io/providers/hashicorp/aws/latest/docs 
aws configure 
aws --version 
terraform --version cd to path where we have .tf files 
terraform init - initialize few things like provider, authenticate to provider(aws) 
terraform plan - dry to run to check what happens when we run terraform apply command like with what options instance is going to create 
terraform apply - to create the resources on the cloud provider like ec2 
terraform destroy - to destory or terminate what we created as part of apply command 
AMI ID - to locate this - go to ec2 - launch instance and select anyone like macOS, ubuntu, amazon linux and that will show us an AMI 
terraform.tfstate - Terraform maintains all the metadata like what we all created in this file including any sensitive details like passwords.
    drawbacks - anyone can access statefile and security is compramised
to overcome these concerns - there is a concept which is remote backend - means terrafrom can create the statefile in the s3 instead local when we run apply command
not only s3, it can either be s3, terraform cloud or azure
input variable - provides input to the terraform
output variable - terraform outputs
main.tf
    -> provider.tf
    -> input.tf
    -> output.tf
    -> terraform.tfvars // file to store all the variable values
        -> By default, apply command will look for this file and retreive all the variable values. if we have diff name like variables.tfvars, will have to provide this name to the apply command

terraform plan -lock=false
git filter-branch --index-filter 'git rm -r --cached --ignore-unmatch terraform-ec2-creation/.terraform/providers/registry.terraform.io/hashicorp/aws/5.30.0/linux_amd64/terraform-provider-aws_v5.30.0_x5' HEAD

terraform show - command to read statefile

state locking - terraform will lock the project to avoid multiple people working on same project at the same time. we can implement this using dynamoDB table.
    so we are basically logging the info in dynamoDB like who is holding the lock currently

ssh-keygen -t rsa = this will generate the public key file
